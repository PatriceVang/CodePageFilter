//
//  DeclarativeVC.swift
//  ToturialFromMaster
//
//  Created Apple on 4/27/20.
//  Copyright Â© 2020 vinova. All rights reserved.
//
//  Template generated by phthphat
//

import UIKit
import DeclarativeUIKit
import Extensions

class DeclarativeVC: UIViewController {
    
    let customLb = UILabel()

	override func viewDidLoad() {
        super.viewDidLoad()
        self.view.backgroundColor = .white
        let text1 = "Hello".withAttribute(
            .font(font: .systemFont(ofSize: 30)),
            .underlineStyle(style: .single),
            .underlineColor(color: .red)
        )
        
        let text2 = " world".withAttribute(
            .font(font: .boldSystemFont(ofSize: 50)),
            .foregroundColor(color: .green)
        )
        
        customLb.attributedText = text1 + text2
        
        vstack(
            UIView(backgroundColor: .blue).with(height: 50),
            
            hstack(
                UIView(backgroundColor: .green)
                    .with(width: 100)
                    .with(cornerRadius: 40),
                vstack(
                    UILabel(text: "Hello"),
                    UILabel(text: "Another Hello"),
                    distribution: .fillProportionally
                ),
                spacing: 20
            ).with(height: 100)
                .with(margins: .allSides(10)),
            UIView(backgroundColor: .red).with(height: 100),
            
            customLb.withTapGesture(self, selector: #selector(onTapLb)),
            
            UIView()
        )
        
    }
    
    @objc func onTapLb() {
        print("Lb tapped")
    }

}


#if DEBUG
import SwiftUI
struct PresentableDeclarativeVC: UIViewControllerRepresentable {
    func makeUIViewController(context: Context) -> DeclarativeVC {
		let vc = DeclarativeVC()
		return vc 
    }
    func updateUIViewController(_ uiViewController: DeclarativeVC, context: Context) { }
}
struct DeclarativeVCPreview: PreviewProvider {
    static var previews: some View {
        return PresentableDeclarativeVC()
    }
}
#endif
